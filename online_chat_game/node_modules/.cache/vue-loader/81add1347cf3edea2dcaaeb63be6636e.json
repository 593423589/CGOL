{"remainingRequest":"C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\src\\components\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\src\\components\\login.vue","mtime":1569504398443},{"path":"C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\王有赫\\Documents\\my files\\vue\\CGOL\\online_chat_game\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport md5 from 'js-md5'\n\nexport default {\n    name: \"login\",\n    mounted() {\n        let bodyWidth = document.body.clientWidth;   //获取屏幕宽度设置默认头像size\n        if (bodyWidth > 500) {\n            this.size = 80\n        }\n    },\n    data() {\n        return {\n            log: ['登录', '注册', '没有账户？', '已注册?'],\n            register: true,  //登录状态\n            size: 50,   //默认头像size\n            url: 'img/background/blur.png',  //默认头像\n            logUser: '',\n            logPassword: '',\n            logEnsurePassword: '',\n            logLoading: false   //隐藏提交按钮的加载图标\n        }\n    },\n    methods: {\n        submit() {  //提交登录或注册\n            let user = {user: this.logUser, password: md5(this.logPassword.toUpperCase())}  //获取input的用户并加密密码\n            const api = this.$parent.api   //获取提交地址\n            if (this.register) {   //已登录状态\n                this.logLoading = true    //显示登录加载图标\n                this.axios.post(api + 'user', user)\n                    .then((response) => {\n                        if (response.data === 'success') {\n                            this.$message({\n                                message: '登录成功',\n                                type: 'success',\n                                duration: 1000\n                            })\n                            this.register = true\n                            this.$emit('changeLoged')\n                            this.axios.post(api + 'updataInfo', {user: this.logUser}).then(response => {\n                                if (response.data) {\n                                    let {name, sex, avatar} = response.data\n                                    if (name && sex) {\n                                        this.$parent.name = name\n                                        this.$parent.sex = sex\n                                        this.$parent.user = this.logUser\n                                        this.$socket.emit('user', {'user':this.$parent.user,'name': this.$parent.name,'id':this.$parent.websocketid,\n                                        'sex':this.$parent.sex,'avatar':avatar})\n                                    }\n                                    if (!avatar.includes('undefined')) {\n                                        this.$parent.avatar = avatar\n                                    }\n                                }\n                            })\n\n                        } else if (response.data === 'fail') {\n                            this.$message({\n                                message: '用户名或密码不正确',\n                                type: 'warning',\n                                duration: 1000\n                            })\n                        }\n                        this.logLoading = false  //隐藏登录加载图标\n\n                    }).catch(err => {\n                    if (err) {\n                        this.$message({\n                            message: '网络异常',\n                            type: 'warning',\n                            duration: 1500\n                        })\n                    }\n                    this.logLoading = false  //隐藏登录加载图标\n\n                })\n            } else {      //未登录状态\n                this.logLoading = true    //显示登录加载图标\n                if (this.logPassword.length >= 6) {\n                    if (this.logEnsurePassword === this.logPassword) {\n                        this.axios.post(api + 'register', user)\n                            .then(response => {\n                                if (response.data === 'success') {\n                                    this.$message({\n                                        message: '注册成功',\n                                        type: 'success',\n                                        duration: 1000\n                                    });\n                                    this.register = true\n                                } else if (response.data === 'fail') {\n                                    this.$message({\n                                        message: '用户名已经有人用啦',\n                                        type: 'warning',\n                                        duration: 1000\n                                    });\n                                }\n                                this.logLoading = false  //隐藏登录加载图标\n                            })\n                            .catch(err => {\n                                if (err) {\n                                    this.$message({\n                                        message: '网络异常',\n                                        type: 'warning',\n                                        duration: 1500\n                                    })\n                                }\n                                this.logLoading = false  //隐藏登录加载图标\n                            })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '密码输入不一致',\n                            type: 'error',\n                            duration: 1000\n                        });\n                    }\n                } else {\n                    this.$message({\n                        showClose: true,\n                        message: '密码最少6位',\n                        type: 'error',\n                        duration: 1000\n                    });\n\n                }\n            }\n        },\n        exchange() {\n            this.register = !this.register  //切换登录或注册\n        }\n    }\n}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"login\">\r\n        <img class=\"background\" style=\"width: 100%; height: 100%\" :src=\"url\">\r\n        <el-container>\r\n            <!--            撑起顶部-->\r\n            <el-header class=\"header\">\r\n            </el-header>\r\n            <!--            主体内容-->\r\n            <el-main>\r\n                <el-avatar class=\"avatar\" :size=\"size\" src=\"img/default_avatar/avatar.jpg\"></el-avatar>\r\n                <el-row class=\"log\">\r\n                    <el-col class=\"Email\">\r\n                        <el-input class=\"myInput\" v-model=\"logUser\" placeholder=\"用户名\"></el-input>\r\n                    </el-col>\r\n\r\n                </el-row>\r\n\r\n                <el-row class=\"log\">\r\n                    <el-input class=\"myInput\" v-model=\"logPassword\" placeholder=\"密 码\" minlength=\"6\"\r\n                              show-password></el-input>\r\n                </el-row>\r\n                <transition name=\"el-zoom-in-top\">\r\n                    <el-row class=\"log transition-box\" v-show=\"!register\">\r\n                        <el-input class=\"myInput\" v-model=\"logEnsurePassword\" placeholder=\"确认密码\" minlength=\"6\"\r\n                                  show-password></el-input>\r\n                    </el-row>\r\n                </transition>\r\n                <el-row class=\"register\">\r\n                    <el-col>\r\n                        <el-button :loading=\"logLoading\" @click=\"submit\" :span=\"12\" round>{{register?log[0]:log[1]}}\r\n                        </el-button>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row class=\"lonIn\">\r\n                    <el-col>\r\n                        <span :span=\"6\" round>{{register?log[2]:log[3]}}<span @click=\"exchange\" style=\"color: #E6A23C\">{{register?log[1]:log[0]}}</span></span>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n\r\n            </el-main>\r\n\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import md5 from 'js-md5'\r\n\r\n    export default {\r\n        name: \"login\",\r\n        mounted() {\r\n            let bodyWidth = document.body.clientWidth;   //获取屏幕宽度设置默认头像size\r\n            if (bodyWidth > 500) {\r\n                this.size = 80\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                log: ['登录', '注册', '没有账户？', '已注册?'],\r\n                register: true,  //登录状态\r\n                size: 50,   //默认头像size\r\n                url: 'img/background/blur.png',  //默认头像\r\n                logUser: '',\r\n                logPassword: '',\r\n                logEnsurePassword: '',\r\n                logLoading: false   //隐藏提交按钮的加载图标\r\n            }\r\n        },\r\n        methods: {\r\n            submit() {  //提交登录或注册\r\n                let user = {user: this.logUser, password: md5(this.logPassword.toUpperCase())}  //获取input的用户并加密密码\r\n                const api = this.$parent.api   //获取提交地址\r\n                if (this.register) {   //已登录状态\r\n                    this.logLoading = true    //显示登录加载图标\r\n                    this.axios.post(api + 'user', user)\r\n                        .then((response) => {\r\n                            if (response.data === 'success') {\r\n                                this.$message({\r\n                                    message: '登录成功',\r\n                                    type: 'success',\r\n                                    duration: 1000\r\n                                })\r\n                                this.register = true\r\n                                this.$emit('changeLoged')\r\n                                this.axios.post(api + 'updataInfo', {user: this.logUser}).then(response => {\r\n                                    if (response.data) {\r\n                                        let {name, sex, avatar} = response.data\r\n                                        if (name && sex) {\r\n                                            this.$parent.name = name\r\n                                            this.$parent.sex = sex\r\n                                            this.$parent.user = this.logUser\r\n                                            this.$socket.emit('user', {'user':this.$parent.user,'name': this.$parent.name,'id':this.$parent.websocketid,\r\n                                            'sex':this.$parent.sex,'avatar':avatar})\r\n                                        }\r\n                                        if (!avatar.includes('undefined')) {\r\n                                            this.$parent.avatar = avatar\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n                            } else if (response.data === 'fail') {\r\n                                this.$message({\r\n                                    message: '用户名或密码不正确',\r\n                                    type: 'warning',\r\n                                    duration: 1000\r\n                                })\r\n                            }\r\n                            this.logLoading = false  //隐藏登录加载图标\r\n\r\n                        }).catch(err => {\r\n                        if (err) {\r\n                            this.$message({\r\n                                message: '网络异常',\r\n                                type: 'warning',\r\n                                duration: 1500\r\n                            })\r\n                        }\r\n                        this.logLoading = false  //隐藏登录加载图标\r\n\r\n                    })\r\n                } else {      //未登录状态\r\n                    this.logLoading = true    //显示登录加载图标\r\n                    if (this.logPassword.length >= 6) {\r\n                        if (this.logEnsurePassword === this.logPassword) {\r\n                            this.axios.post(api + 'register', user)\r\n                                .then(response => {\r\n                                    if (response.data === 'success') {\r\n                                        this.$message({\r\n                                            message: '注册成功',\r\n                                            type: 'success',\r\n                                            duration: 1000\r\n                                        });\r\n                                        this.register = true\r\n                                    } else if (response.data === 'fail') {\r\n                                        this.$message({\r\n                                            message: '用户名已经有人用啦',\r\n                                            type: 'warning',\r\n                                            duration: 1000\r\n                                        });\r\n                                    }\r\n                                    this.logLoading = false  //隐藏登录加载图标\r\n                                })\r\n                                .catch(err => {\r\n                                    if (err) {\r\n                                        this.$message({\r\n                                            message: '网络异常',\r\n                                            type: 'warning',\r\n                                            duration: 1500\r\n                                        })\r\n                                    }\r\n                                    this.logLoading = false  //隐藏登录加载图标\r\n                                })\r\n                        } else {\r\n                            this.$message({\r\n                                showClose: true,\r\n                                message: '密码输入不一致',\r\n                                type: 'error',\r\n                                duration: 1000\r\n                            });\r\n                        }\r\n                    } else {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: '密码最少6位',\r\n                            type: 'error',\r\n                            duration: 1000\r\n                        });\r\n\r\n                    }\r\n                }\r\n            },\r\n            exchange() {\r\n                this.register = !this.register  //切换登录或注册\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n    #login\r\n        .background\r\n            position fixed\r\n            top 0\r\n            left 0\r\n            z-index -10\r\n\r\n        .header\r\n            width 100%\r\n            color #fcfcfc\r\n            font-size 15px\r\n            line-height 90px\r\n            margin-bottom 4vw\r\n\r\n            .icon\r\n            .title\r\n                text-align center\r\n\r\n        .el-main\r\n            .avatar\r\n                margin-top 4vw\r\n                margin-bottom 4vw\r\n\r\n            .log\r\n                margin-top 2vw\r\n                margin-bottom 2vw\r\n\r\n                .el-autocomplete\r\n                    display block\r\n\r\n                .BtnCaptcha\r\n                    position relative\r\n                    top 2vw\r\n                    right 8vw\r\n                    background-color #fff0\r\n                    width 4em\r\n                    border 0\r\n                    color #222\r\n                    font-size 14px\r\n\r\n\r\n                .el-input__inner\r\n                    background-color: #fff0\r\n                    border 0\r\n                    border-bottom 1px solid rgba(71, 97, 110, 0.72)\r\n                    border-radius 0\r\n                    display: inline-block\r\n                    padding-top 2vw\r\n                    padding-left 5px\r\n                    font-size: 3.5vw\r\n                    height: 12vw\r\n                    line-height: 12vw\r\n                    width: 70%\r\n                    color #5B696C\r\n\r\n                .el-input__inner::-webkit-input-placeholder /* WebKit browsers */\r\n                    color: #5B696C\r\n\r\n            .register\r\n                margin-top 16vw\r\n\r\n                .el-button\r\n                    height 7.2vw\r\n                    width 15vw\r\n                    font-size 3.4vw\r\n                    padding 0\r\n\r\n            .lonIn\r\n                margin-top 20px\r\n                font-size 3vw\r\n                color #d1dbe5\r\n\r\n    .el-footer\r\n        position absolute\r\n        bottom 10px\r\n        width 100%\r\n\r\n        .el-row\r\n            color rgba(209, 219, 229, 0.43)\r\n            font-size 14px\r\n\r\n</style>\r\n"]}]}